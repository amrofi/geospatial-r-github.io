setwd("F:\\Spatial_Analysis_with_R\\New folder\\RASTER")
dir()
grid<-read.csv("input_grid_data.csv", header=T)
names(grid)
# Convert data to spatial point data frame
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
CO.STATE<-shapefile("CO_STATE_PROJ.shp")
proj<-proj4string(CO.STATE)
# NDVI
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=100)
NDVI.CO <- mask(NDVI.LOW, CO.STATE)
rm(list=ls(all=TRUE))
library(dplyr)
library(sp)
library(gstat)
library(raster)
library(rgdal)
setwd("F:\\Spatial_Analysis_with_R\\New folder")
dir()
grid<-read.csv("input_grid_data.csv", header=T)
names(grid)
# Convert data to spatial point data frame
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
CO.STATE<-shapefile("CO_STATE_PROJ.shp")
proj<-proj4string(CO.STATE)
# NDVI
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=100)
NDVI.CO <- mask(NDVI.LOW, CO.STATE)
NDVI.CO
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=10)
NDVI.CO <- mask(NDVI.LOW, CO.STATE)
NDVI.CO
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=10)
ELEV.CO <- mask(ELEV.LOW, CO.STATE)
ELEV.CO
setwd("F:\\Spatial_Analysis_with_R\\LESSON_05 Raster Data Processing in R")
ELEV.GCS<-raster("ELEV.tif")
ELEV.GCS
library(dplyr)
library(sp)
library(gstat)
library(raster)
library(rgdal)
setwd("F:\\Spatial_Analysis_with_R\\New folder")
dir()
grid<-read.csv("input_grid_data.csv", header=T)
r<-raster(ELEV.tiff)
r
r<-raster("ELEV.tiff")
r
rm(list=ls(all=TRUE))
library(dplyr)
library(sp)
library(gstat)
library(raster)
library(rgdal)
setwd("F:\\Spatial_Analysis_with_R\\New folder")
dir()
r<-raster("ELEV.tif")
r
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=10)
ELEV.CO <- mask(ELEV.LOW, CO.STATE)
ELEV.CO
writeRaster(ELEV,"ELEV.tiff","GTiff",overwrite=TRUE)
r<-raster("NDVI.tif")
r
r<-raster("NLCD.tif")
r
grid<-read.csv("input_grid_data.csv", header=T)
names(grid)
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=10, fun=mean)
NDVI.CO <- mask(NDVI.LOW, CO.STATE)
NDVI.CO
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
CO.STATE<-shapefile("CO_STATE_PROJ.shp")
proj<-proj4string(CO.STATE)
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=10, fun=mean)
NDVI.CO <- mask(NDVI.LOW, CO.STATE)
NDVI.CO
r<-raster("NDVI.tif")
r
ELEV<-raster("ELEV.tif")
ELEV<-raster("ELEV.tif")
newProjection=CRS("+init=epsg:4326")  	# new projection UTM zone 46N
DEM.UTM<- projectRaster(ELEV, 		# input raster data
crs=newProjection 			# define new projection
)
ELEV
writeRaster(DEM.UTM, # input raster object
"ELEV_GCS.tif",	# output file name
format="GTiff",	# Output file type
overwrite=TRUE)	# If TRUE, "filename" will be overwritten if it exists
ELEV.GCS<-raster("ELEV_GCS.tif")
ELEV.GCS@crs
ELEV.GCS
newProjection=CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
ELEV.PROJ<- projectRaster(ELEV.GCS, 		# input raster data
crs=newProjection, 			              # define new projection
res=10000,				                    # set resulation to 10000 m
methods="bilinear"			              # default bilinear interpolation
)
ELEV.PROJ					                      # check raster attributes
plot(ELEV.PROJ)
rm(list=ls(all=TRUE))
library(dplyr)
library(sp)
library(gstat)
library(raster)
library(rgdal)
setwd("F:\\Spatial_Analysis_with_R\\New folder")
dir()
grid<-read.csv("input_grid_data.csv", header=T)
names(grid)
# Convert data to spatial point data frame
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
CO.STATE<-shapefile("CO_STATE_PROJ.shp")
proj<-proj4string(CO.STATE)
# NDVI
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=10, fun=mean)
NDVI.CO <- mask(NDVI.LOW, CO.STATE)
writeRaster(NDVI.CO,"NDVI.tiff","GTiff",overwrite=TRUE)
# MAP
MAP <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "MAP")])
proj4string(MAP) = CRS(proj)
MAP.LOW<-aggregate(MAP, fact=10)
MAP.CO <- mask(MAP.LOW, CO.STATE)
writeRaster(MAP.CO,"MAP.tiff","GTiff",overwrite=TRUE)
# MAT
MAT <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "MAT")])
proj4string(MAT) = CRS(proj)
MAT.LOW<-aggregate(MAT, fact=10)
MAT.CO <- mask(MAT.LOW, CO.STATE)
writeRaster(MAT.CO,"MAT.tiff","GTiff",overwrite=TRUE)
# Silt_Clay
Silt_Clay <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Silt_Clay")])
proj4string(Silt_Clay) = CRS(proj)
Silt_Clay.LOW<-aggregate(Silt_Clay, fact=10)
Silt_Clay.CO <- mask(Silt_Clay.LOW, CO.STATE)
writeRaster(Silt_Clay.CO,"Silt_Clay.tiff","GTiff",overwrite=TRUE)
# TSP_ID
TSP_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "TSP_ID")])
proj4string(TSP_ID) = CRS(proj)
TSP_ID.LOW<-aggregate(TSP_ID, fact=10)
TSP_ID.CO <- mask(TSP_ID.LOW, CO.STATE)
writeRaster(TSP_ID.CO,"TSP_ID.tiff","GTiff",overwrite=TRUE)
# FRG_ID
FRG_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "FRG_ID")])
proj4string(FRG_ID) = CRS(proj)
FRG_ID.LOW<-aggregate(FRG_ID, fact=10)
FRG_ID.CO <- mask(FRG_ID.LOW, CO.STATE)
writeRaster(FRG_ID.CO,"FRG_ID.tiff","GTiff",overwrite=TRUE)
# NLCD_ID
NLCD_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NLCD_ID")])
proj4string(NLCD_ID) = CRS(proj)
NLCD_ID.LOW<-aggregate(NLCD_ID, fact=10)
NLCD_ID.CO <- mask(NLCD_ID.LOW, CO.STATE)
writeRaster(NLCD_ID.CO,"NLCD_ID.tiff","GTiff",overwrite=TRUE)
# K_Factor
K_Factor <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "K_Factor")])
proj4string(K_Factor) = CRS(proj)
K_Factor.LOW<-aggregate(K_Factor, fact=10)
K_Factor.CO <- mask(K_Factor.LOW, CO.STATE)
writeRaster(K_Factor.CO,"K_Factor.tiff","GTiff",overwrite=TRUE)
# ELEV
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=10)
ELEV.CO <- mask(ELEV.LOW, CO.STATE)
writeRaster(ELEV.CO,"ELEV.tiff","GTiff",overwrite=TRUE)
# Aspect
Aspect <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Aspect")])
proj4string(Aspect) = CRS(proj)
Aspect.LOW<-aggregate(Aspect, fact=10)
Aspect.CO <- mask(Aspect.LOW, CO.STATE)
plot(Aspect.CO)
writeRaster(Aspect.CO,"Aspect.tiff","GTiff",overwrite=TRUE)
# Slope_Gradient
Slope_Gradient <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Slope_Gradient")])
proj4string(Slope_Gradient) = CRS(proj)
Slope_Gradient.LOW<-aggregate(Slope_Gradient, fact=10)
Slope_Gradient.CO <- mask(Slope_Gradient.LOW, CO.STATE)
writeRaster(Slope_Gradient.CO,"Slope_Gradient.tiff","GTiff",overwrite=TRUE)
setwd("F:\\Spatial_Analysis_with_R\\LESSON_05 Raster Data Processing in R")
ELEV.GCS<-raster("ELEV.tif")
ELEV.GCS<-raster("ELEV.tif")
newProjection=CRS("+init=epsg:4326")	# new projection UTM zone 46N
DEM.GCS<- projectRaster(ELEV.GCS, 		# input raster data
crs=newProjection 			# define new projection
)
writeRaster(DEM.GCS, # input raster object
"ELEV_GCS.tif",	# output file name
format="GTiff",	# Output file type
overwrite=TRUE)	# If TRUE, "filename" will be overwritten if it exists
ELEV.GCS<-raster("ELEV_GCS.tif")
ELEV.GCS@crs
ELEV.GCS
newProjection=CRS("+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
ELEV.PROJ<- projectRaster(ELEV.GCS, 		# input raster data
crs=newProjection, 			              # define new projection
res=10000,				                    # set resulation to 10000 m
methods="bilinear"			              # default bilinear interpolation
)
ELEV.PROJ					                      # check raster attributes
par(mfrow=c(1,2))
plot(ELEV.GCS, main="WGS 1984")
plot(ELEV.PROJ, main="Albers Equal Area Conic")
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(ELEV.GCS, main="WGS 1984")
plot(ELEV.PROJ, main="Albers Equal Area Conic")
par(mfrow=c(1,1))
rm(list=ls(all=TRUE))
library(dplyr)
library(sp)
library(gstat)
library(raster)
library(rgdal)
setwd("F:\\Spatial_Analysis_with_R\\New folder")
dir()
grid<-read.csv("input_grid_data.csv", header=T)
names(grid)
# Convert data to spatial point data frame
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
CO.STATE<-shapefile("CO_STATE_PROJ.shp")
proj<-proj4string(CO.STATE)
# NDVI
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=5, fun=mean)
NDVI.CO <- mask(NDVI.LOW, CO.STATE)
writeRaster(NDVI.CO,"NDVI.tiff","GTiff",overwrite=TRUE)
# MAP
MAP <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "MAP")])
proj4string(MAP) = CRS(proj)
MAP.LOW<-aggregate(MAP, fact=5)
MAP.CO <- mask(MAP.LOW, CO.STATE)
writeRaster(MAP.CO,"MAP.tiff","GTiff",overwrite=TRUE)
# MAT
MAT <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "MAT")])
proj4string(MAT) = CRS(proj)
MAT.LOW<-aggregate(MAT, fact=5)
MAT.CO <- mask(MAT.LOW, CO.STATE)
writeRaster(MAT.CO,"MAT.tiff","GTiff",overwrite=TRUE)
# Silt_Clay
Silt_Clay <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Silt_Clay")])
proj4string(Silt_Clay) = CRS(proj)
Silt_Clay.LOW<-aggregate(Silt_Clay, fact=5)
Silt_Clay.CO <- mask(Silt_Clay.LOW, CO.STATE)
writeRaster(Silt_Clay.CO,"Silt_Clay.tiff","GTiff",overwrite=TRUE)
# TSP_ID
TSP_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "TSP_ID")])
proj4string(TSP_ID) = CRS(proj)
TSP_ID.LOW<-aggregate(TSP_ID, fact=5)
TSP_ID.CO <- mask(TSP_ID.LOW, CO.STATE)
writeRaster(TSP_ID.CO,"TSP_ID.tiff","GTiff",overwrite=TRUE)
# FRG_ID
FRG_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "FRG_ID")])
proj4string(FRG_ID) = CRS(proj)
FRG_ID.LOW<-aggregate(FRG_ID, fact=5)
FRG_ID.CO <- mask(FRG_ID.LOW, CO.STATE)
writeRaster(FRG_ID.CO,"FRG_ID.tiff","GTiff",overwrite=TRUE)
# NLCD_ID
NLCD_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NLCD_ID")])
proj4string(NLCD_ID) = CRS(proj)
NLCD_ID.LOW<-aggregate(NLCD_ID, fact=5)
NLCD_ID.CO <- mask(NLCD_ID.LOW, CO.STATE)
writeRaster(NLCD_ID.CO,"NLCD_ID.tiff","GTiff",overwrite=TRUE)
# K_Factor
K_Factor <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "K_Factor")])
proj4string(K_Factor) = CRS(proj)
K_Factor.LOW<-aggregate(K_Factor, fact=5)
K_Factor.CO <- mask(K_Factor.LOW, CO.STATE)
writeRaster(K_Factor.CO,"K_Factor.tiff","GTiff",overwrite=TRUE)
# ELEV
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=5)
ELEV.CO <- mask(ELEV.LOW, CO.STATE)
writeRaster(ELEV.CO,"ELEV.tiff","GTiff",overwrite=TRUE)
# Aspect
Aspect <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Aspect")])
proj4string(Aspect) = CRS(proj)
Aspect.LOW<-aggregate(Aspect, fact=5)
Aspect.CO <- mask(Aspect.LOW, CO.STATE)
plot(Aspect.CO)
writeRaster(Aspect.CO,"Aspect.tiff","GTiff",overwrite=TRUE)
# Slope_Gradient
Slope_Gradient <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Slope_Gradient")])
proj4string(Slope_Gradient) = CRS(proj)
Slope_Gradient.LOW<-aggregate(Slope_Gradient, fact=5)
Slope_Gradient.CO <- mask(Slope_Gradient.LOW, CO.STATE)
writeRaster(Slope_Gradient.CO,"Slope_Gradient.tiff","GTiff",overwrite=TRUE)
library(ggplot2)		# for plotting
library(RColorBrewer)	# for customize colour palettes
library (rgdal) 		# Geospatial Data Abstraction Library
library (raster) 		# raster data
library(rasterVis)	 # raster visualisation
setwd("F:\\Spatial_Analysis_with_R\\LESSON_05 Raster Data Processing in R")
ELEV<-raster("ELEV.tif")
ELEV@crs
ELEV
plot(ELEV, main="Albers Equal Area Conic")
rm(list=ls(all=TRUE))
library(dplyr)
library(sp)
library(gstat)
library(raster)
library(rgdal)
setwd("F:\\Spatial_Analysis_with_R\\New folder")
dir()
grid<-read.csv("input_grid_data.csv", header=T)
names(grid)
# Convert data to spatial point data frame
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
CO.STATE<-shapefile("CO_STATE_PROJ.shp")
proj<-proj4string(CO.STATE)
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=5)
#ELEV.CO <- mask(ELEV.LOW, CO.STATE)
writeRaster(ELEV.LOW,"GP_ELEV.tiff","GTiff",overwrite=TRUE)
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=5)
ELEV.CO <- mask(ELEV.LOW, CO.STATE)
writeRaster(ELEV.LOW,"CO_ELEV.tiff","GTiff",overwrite=TRUE)
writeRaster(ELEV.CO,"CO_ELEV.tiff","GTiff",overwrite=TRUE)
final_01 <- overlay(x = ELEV.CO, y = fmask, fun = map2NA)
plot(final_01)
y<-0
ELEV.CO[ELEV.COr > y] <- y
ELEV.CO[ELEV.CO < 0] <- 0
y<-0
ELEV.CO[ELEV.CO > y] <- y
ELEV.CO[ELEV.CO < 0] <- 0
plot(ELEV.CO)
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=5)
ELEV.CO <- mask(ELEV.LOW, CO.STATE)
plot(ELEV.CO)
y<-0
ELEV.CO[ELEV.CO < y] <- y
ELEV.CO[ELEV.CO < 0] <- 0
plot(ELEV.CO)
y<-0
ELEV.CO[ELEV.CO < y] <- y
ELEV.CO[ELEV.CO < 0] <- 0
plot(ELEV.CO)
ELEV.CO
summary(ELEV.CO)
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=5)
ELEV.CO <- mask(ELEV.LOW, CO.STATE)
ELEV.CO[is.na(ELEV.CO)] <- 0
plot(ELEV.CO)
summary(ELEV.CO)
elevation.sub <- crop(ELEV.LOW, extent(CO.STATE))
plot(elevation.sub)
plot(ELEV.CO)
elevation.sub <- crop(ELEV.LOW, extent(CO.STATE))
plot(elevation.sub)
mask(elevation.sub, CO.STATE)
elevation.sub <-mask(elevation.sub, CO.STATE)
plot(elevation.sub)
names(grid)
x<-SpatialPointsDataFrame(grid[, c("x", "y")], data = grid)
CO.STATE<-shapefile("CO_STATE_PROJ.shp")
proj<-proj4string(CO.STATE)
# NDVI
NDVI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NDVI")])
proj4string(NDVI) = CRS(proj)
NDVI.LOW<-aggregate(NDVI, fact=5)
NDVI.CO <- crop(NDVI.LOW, extent(CO.STATE))
NDVI.CO <-mask(NDVI.CO, CO.STATE)
writeRaster(NDVI.CO,"CO_NDVI.tiff","GTiff",overwrite=TRUE)
# MAP
MAP <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "MAP")])
proj4string(MAP) = CRS(proj)
MAP.LOW<-aggregate(MAP, fact=5)
MAP.CO <- crop(MAP.LOW, extent(CO.STATE))
MAP.CO <-mask(MAP.CO, CO.STATE)
writeRaster(MAP.CO,"CO_MAP.tiff","GTiff",overwrite=TRUE)
# MAT
MAT <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "MAT")])
proj4string(MAT) = CRS(proj)
MAT.LOW<-aggregate(MAT, fact=5)
MAT.CO <- crop(MAT.LOW, extent(CO.STATE))
MAT.CO <-mask(MAT.CO, CO.STATE)
writeRaster(MAT.CO,"CO_MAT.tiff","GTiff",overwrite=TRUE)
# Silt_Clay
Silt_Clay <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Silt_Clay")])
proj4string(Silt_Clay) = CRS(proj)
Silt_Clay.LOW<-aggregate(Silt_Clay, fact=5)
Silt_Clay.CO <- crop(Silt_Clay.LOW, extent(CO.STATE))
Silt_Clay.CO <-mask(Silt_Clay.CO, CO.STATE)
writeRaster(Silt_Clay.CO,"CO_Silt_Clay.tiff","GTiff",overwrite=TRUE)
# FRG_ID
FRG_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "FRG_ID")])
proj4string(FRG_ID) = CRS(proj)
FRG_ID.LOW<-aggregate(FRG_ID, fact=5)
FRG_ID.CO <- crop(FRG_ID.LOW, extent(CO.STATE))
FRG_ID.CO <-mask(FRG_ID.CO, CO.STATE)
writeRaster(FRG_ID.CO,"CO_FRG_ID.tiff","GTiff",overwrite=TRUE)
# NLCD_ID
NLCD_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "NLCD_ID")])
proj4string(NLCD_ID) = CRS(proj)
NLCD_ID.LOW<-aggregate(NLCD_ID, fact=5)
NLCD_ID.CO <- crop(NLCD_ID.LOW, extent(CO.STATE))
NLCD_ID.CO <-mask(NLCD_ID.CO, CO.STATE)
writeRaster(NLCD_ID.CO,"CO_NLCD_ID.tiff","GTiff",overwrite=TRUE)
# K_Factor
K_Factor <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "K_Factor")])
proj4string(K_Factor) = CRS(proj)
K_Factor.LOW<-aggregate(K_Factor, fact=5)
K_Factor.CO <- crop(K_Factor.LOW, extent(CO.STATE))
K_Factor.CO <-mask(K_Factor.CO, CO.STATE)
writeRaster(K_Factor.CO,"CO_K_Factor.tiff","GTiff",overwrite=TRUE)
# ELEV
ELEV <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "ELEV")])
proj4string(ELEV) = CRS(proj)
ELEV.LOW<-aggregate(ELEV, fact=5)
ELEV.CO <- crop(ELEV.LOW, extent(CO.STATE))
ELEV.CO <-mask(ELEV.CO, CO.STATE)
writeRaster(ELEV.CO,"CO_ELEV.tiff","GTiff",overwrite=TRUE)
# Aspect
Aspect <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Aspect")])
proj4string(Aspect) = CRS(proj)
Aspect.LOW<-aggregate(Aspect, fact=5)
Aspect.CO <- crop(Aspect.LOW, extent(CO.STATE))
Aspect.CO <-mask(Aspect.CO, CO.STATE)
writeRaster(Aspect.CO,"CO_Aspect.tiff","GTiff",overwrite=TRUE)
# Slope_Gradient
Slope_Gradient <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "Slope_Gradient")])
proj4string(Slope_Gradient) = CRS(proj)
Slope_Gradient.LOW<-aggregate(Slope_Gradient, fact=5)
Slope_Gradient.CO <- crop(Slope_Gradient.LOW, extent(CO.STATE))
Slope_Gradient.CO <-mask(Slope_Gradient.CO, CO.STATE)
writeRaster(Slope_Gradient.CO,"CO_Slope_Gradient.tiff","GTiff",overwrite=TRUE)
# TSP_ID
TSP_ID <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "TSP_ID")])
proj4string(TSP_ID) = CRS(proj)
TSP_ID.LOW<-aggregate(TSP_ID, fact=5)
TSP_ID.CO <- crop(TSP_ID.LOW, extent(CO.STATE))
TSP_ID.CO <-mask(TSP_ID.CO, CO.STATE)
writeRaster(TSP_ID.CO,"CO_TSP_ID.tiff","GTiff",overwrite=TRUE)
# TPI
TPI <- rasterFromXYZ(as.data.frame(x)[, c("x", "y", "TPI")])
proj4string(TPI) = CRS(proj)
TPI.LOW<-aggregate(TPI, fact=5)
TPI.CO <- crop(TPI.LOW, extent(CO.STATE))
TPI.CO <-mask(TPI.CO, CO.STATE)
writeRaster(TPI.CO,"CO_TPI.tiff","GTiff",overwrite=TRUE)
setwd("F:\\Spatial_Analysis_with_R\\LESSON_04 Geoprocessing of Vector data in R\\GP_STATE")
dir()
KS.STATE<-shapefile("KS_STATE_BD.shp")
NM.STATE<-shapefile("NM_STATE_BD.shp")
WY.STATE<-shapefile("WY_STATE_BD.shp")
ELEV.KS <- crop(ELEV.LOW, extent(KS.STATE))
ELEV.KS <-mask(ELEV.KS, KS.STATE)
writeRaster(ELEV.KS,"KS_ELEV.tiff","GTiff",overwrite=TRUE)
ELEV.LOW<-raster("GP_ELEV.tif")
ELEV.KS <- crop(ELEV.LOW, extent(KS.STATE))
ELEV.KS <-mask(ELEV.KS, KS.STATE)
plot(ELEV.KS)
KS.STATE<-shapefile("KS_STATE_BD.shp")
NM.STATE<-shapefile("NM_STATE_BD.shp")
WY.STATE<-shapefile("WY_STATE_BD.shp")
CO.STATE<-shapefile("CO_STATE_BD.shp")
ELEV.WY<- crop(ELEV.LOW, extent(WY.STATE))
ELEV.WY <-mask(ELEV.WY, WY.STATE)
writeRaster(ELEV.WY,"WY_ELEV.tiff","GTiff",overwrite=TRUE)
plT(ELEV.WY)
plot(ELEV.WY)
ELEV.NM<- crop(ELEV.LOW, extent(NM.STATE))
ELEV.NM <-mask(ELEV.NM, NM.STATE)
writeRaster(ELEV.NM,"NM_ELEV.tiff","GTiff",overwrite=TRUE)
plot(ELEV.NM)
ELEV.CO- crop(ELEV.LOW, extent(CO.STATE))
ELEV.CO <-mask(ELEV.CO, CO.STATE)
writeRaster(ELEV.CO,"CO_ELEV.tiff","GTiff",overwrite=TRUE)
plot(ELEV.CO)
plot(ELEV.WY)
ELEV.KS <- crop(ELEV.LOW, extent(KS.STATE))
ELEV.KS <-mask(ELEV.KS, KS.STATE)
writeRaster(ELEV.KS,"KS_ELEV.tiff","GTiff",overwrite=TRUE)
ELEV.LOW<-raster("GP_ELEV.tif")
ELEV.KS <- crop(ELEV.LOW, extent(KS.STATE))
ELEV.KS <-mask(ELEV.KS, KS.STATE)
writeRaster(ELEV.KS,"KS_ELEV.tiff","GTiff",overwrite=TRUE)
ELEV.KS <- crop(ELEV.LOW, extent(KS.STATE))
ELEV.KS- crop(ELEV.LOW, extent(KS.STATE))
ELEV.KS <-mask(ELEV.KS, KS.STATE)
writeRaster(ELEV.KS,"KS_ELEV.tiff","GTiff",overwrite=TRUE)
