"<br>", "<b>Date: </b>", data$date_incid,
"<br>", "<b>Day of week: </b>", data$day_of_week,
"<br>", "<b>Time: </b>", data$hour_of_day,
"<br>", "<b>Address: </b>", data$address,
"<br>", "<b>Longitude: </b>", data$long,
"<br>", "<b>Latitude: </b>", data$lat)
leaflet(data, width = "100%") %>% addTiles() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addMarkers(lng = ~long, lat = ~lat, popup = data$popup, clusterOptions = markerClusterOptions()) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE)
)
library(sp)           ## Data management
library(spdep)        ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(raster)       ## spatial data
library(grid)         # plot
library(gridExtra)    # Multiple plot
library(ggplot2)      # Multiple plot
library(gtable)
library(ggrepel)      # for better lebelling
library(tidyverse)    # data manupulation
library(ggplot2)
library(ggmap)        #use to read map
library(maps)         #map tools kits
library(spatstat)
library(maptools)
# Define data folder
dataFolder<-"D:\\Dropbox\\WebSite_Data\\R_Data\\Data_Crime\\"
df<-read.csv(paste0(dataFolder,"crime_data_2018.csv"), header = TRUE)
city<-shapefile(paste0(dataFolder,"buffalo_city.shp"))
crime_loc<-shapefile(paste0(dataFolder,"Crime_location_2018.shp"))
df$incident_type<-as.factor(df$incident_type)
levels(df$incident_type)
df_incident <- as.data.frame(sort(table(df$incident_type),decreasing = TRUE))
colnames(df_incident) <- c("Incident_Type", "Total")
df_incident
df_incident$Percentage <- df_incident$Total / sum(df_incident$Total)
df_incident
df_incident %>%
ggplot(aes(reorder(`Incident_Type`, Total), y = Total)) +
geom_col(fill = "orange") +
geom_label_repel(aes(label = Total), size = 2.5) +
coord_flip() +
labs(title = "Crime Committed in 2018 at City of Buffalo",
x = "",
y = "Total")+
theme(plot.title = element_text(hjust = 0.5))
city_gcs <- spTransform(city, CRS("+proj=longlat +datum=WGS84"))
city_gcs <- fortify(city_gcs)
cols=c("Theft" ="Green", "Assault"= "blue", "Breaking & Entering" = "sky blue", "Theft of Vehicle"= "orange", "Robbery" = "yellow4",
"Other Sexual Offense" = "yellow", "Sexual Assault" = "black" , "Homicide" = "red")
qmplot(long, lat, data = city_gcs, maptype = "toner-lite", color = I("grey"))+
geom_polygon(aes(x=long, y=lat, group=group),
fill='grey', size=.2,color='black', data=city_gcs, alpha=0)+
geom_point(aes(x = long,
y = lat,
size = I(1),
colour = incident_type
), data =df) +
coord_equal() +
scale_colour_manual(values = cols) +
ggtitle("Types of Crime Commited in 2018")+
theme(plot.title = element_text(hjust = 0.5))
crime_data=merge(crime_loc, df, by="ID")
cityOwin <- as.owin(city)
class(cityOwin)
pts <- coordinates(crime_data)
head(pts)
p <- ppp(pts[,1], pts[,2], window=cityOwin)
plot(p)
ds <- density(p,
sigma = 500) # Smoothing bandwidth, or bandwidth selection function
plot(ds, Add=TRUE, main='Crime density')
persp(ds, main="Density")
contour(ds, main = "Density")
crime_data$fcat <- as.factor(crime_data$incident_type)
w <- as.owin(city)
xy <- coordinates(crime_data)
mpp <- ppp(xy[,1], xy[,2], window = w, marks=crime_data$fcat)
spp <- split(mpp)
plot(spp, main='')
plot(density(spp, sigma=500), main='')
spatstat.options(checksegments = FALSE)
kHom <- Kest(spp$"Homicide")
keHom <- envelope(spp$"Homicide", Kest)
# Define data folder
dataFolder<-"D:\\Dropbox\\WebSite_Data\\R_Data\\Data_Crime\\"
df<-read.csv(paste0(dataFolder,"crime_data_2018.csv"), header = TRUE)
city<-shapefile(paste0(dataFolder,"buffalo_city.shp"))
crime_loc<-shapefile(paste0(dataFolder,"Crime_location_2018.shp"))
qmplot(long, lat, data = city_gcs, maptype = "toner-lite", color = I("grey"))+
geom_polygon(aes(x=long, y=lat, group=group),
fill='grey', size=.2,color='black', data=city_gcs, alpha=0)+
geom_density_2d(aes(x = long, y = lat), data = df) +
stat_density2d(data = df,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red",
guide = FALSE) + scale_alpha(range = c(0, 0.3), guide = FALSE)+
ggtitle("Density Map of All Crimes Commited in \n 2018 at City of Buffalo")+
theme(plot.title = element_text(hjust = 0.5))
theft_df<- df %>%
select(incident_type, long, lat) %>%
filter(incident_type =="Theft")
qmplot(long, lat, data = city_gcs, maptype = "toner-lite", color = I("grey"))+
geom_polygon(aes(x=long, y=lat, group=group),
fill='grey', size=.2,color='black', data=city_gcs, alpha=0)+
geom_density_2d(aes(x = long, y = lat), data = theft_df) +
stat_density2d(data = theft_df,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red",
guide = FALSE) + scale_alpha(range = c(0, 0.3), guide = FALSE)+
ggtitle("Density Map of Theft Commited in \n 2018 at City of Buffalo")+
theme(plot.title = element_text(hjust = 0.5))
qmplot(long, lat, data = city_gcs, maptype = "toner-lite", color = I("grey"))+
geom_polygon(aes(x=long, y=lat, group=group),
fill='grey', size=.2,color='black', data=city_gcs, alpha=0)+
geom_density_2d(aes(x = long, y = lat), data = theft_df) +
stat_density2d(data = theft_df,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red",
guide = FALSE) + scale_alpha(range = c(0, 0.3), guide = FALSE)+
ggtitle("Density Map of Theft Commited in \n 2018 at City of Buffalo")+
theme(plot.title = element_text(hjust = 0.5))
# Create a data frame
crime_df<- df %>%
select(incident_type, long, lat) %>%
filter(incident_type %in% c("Theft", "Assault","Breaking & Entering", "Theft of Vehicle"))
# Create a data frame
crime_df<- df %>%
select(incident_type, long, lat) %>%
filter(incident_type %in% c("Theft", "Assault","Breaking & Entering", "Theft of Vehicle"))
qmplot(long, lat, data = city_gcs, maptype = "toner-lite", color = I("grey"))+
geom_density_2d(aes(x = long, y = lat), data =crime_df) +
facet_wrap(~ incident_type)+
stat_density2d(data = crime_df,
aes(x = long, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red",
guide = FALSE) + scale_alpha(range = c(0, 0.3), guide = FALSE)+
ggtitle( "Density Maps of the four most crimes committed in \n 2018 at  City of Buffalo")+
theme(plot.title = element_text(hjust = 0.5))
theft_df_time<- df %>%
select(incident_type, day_of_week, hour_of_day ) %>%
filter(incident_type =="Theft")
theft_df_time <- theft_df_time%>%
group_by(day_of_week, hour_of_day) %>%
summarize(count = n())
head(theft_df_time)
plot <- ggplot(theft_df_time, aes(x = hour_of_day, y = day_of_week, fill = count)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6), legend.title = element_blank(), legend.position="top",               legend.direction="horizontal", legend.key.width=unit(2, "cm"), legend.key.height=unit(0.25, "cm"), legend.margin=unit(-0.5,"cm"), panel.margin=element_blank()) +
labs(x = "Hour at Theft Committed", y = "Day of the Week", title = "Number of Theft Committed at City of Buffalo, 2018") +
scale_fill_gradient(low = "white", high = "#27AE60")
plot
df_arrest_time_crime <- df %>%
group_by(incident_type, day_of_week, hour_of_day) %>%
summarize(count = n())
plot <- ggplot(df_arrest_time_crime, aes(x = hour_of_day, y = day_of_week, fill = count)) +
geom_tile() +
facet_wrap(~ incident_type, nrow=2)+
# fte_theme() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.6, size = 4))+
labs(x = "Hour at Crime Committed", y = "Day of the Week", title = "Number of Cimes Committed  at City of Buffalo, 2018") +
scale_fill_gradient(low = "white", high = "#27AE60")
plot
data <- df %>%
select(ID, long, lat, address, incident_type, date_incid, day_of_week, hour_of_day)
library(leaflet)
data$popup <- paste("<b>Incident #: </b>", data$ID, "<br>", "<b>incident_type: </b>", data$incident_type,
"<br>", "<b>Date: </b>", data$date_incid,
"<br>", "<b>Day of week: </b>", data$day_of_week,
"<br>", "<b>Time: </b>", data$date_incid,
"<br>", "<b>Address: </b>", data$address,
"<br>", "<b>Longitude: </b>", data$long,
"<br>", "<b>Latitude: </b>", data$lat)
leaflet(data, width = "100%") %>% addTiles() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addMarkers(lng = ~long, lat = ~lat, popup = data$popup, clusterOptions = markerClusterOptions()) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE)
)
ds <- density(p,
sigma = 500) # Smoothing bandwidth, or bandwidth selection function
plot(ds, Add=TRUE, main='Crime density')
ds <- density(p, sigma = 500,edge=T,W=as.mask(window,eps=c(100,100))) # Smoothing bandwidth, or bandwidth selection function
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
plot(ds.raster)
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
plot(ds.raster)
contour <- rasterToContour(ds.raster,maxpixels=100000,nlevels=10)
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
ds.contour <- rasterToContour(ds.raster,maxpixels=100000,nlevels=10)
plot(ds.contour)
contour.Leaflet <- toGeoJSON(ds.contour)
library(leaflet)
contour.Leaflet <- toGeoJSON(ds.contour)
install.packages("leafletR")
library(leafletR)
contour.Leaflet <- toGeoJSON(ds.contour)
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
projection(Density.raster)=projection(city)
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
projection(Dds.raster)=projection(city)
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
projection(ds.raster)=projection(city)
ds.contour <- rasterToContour(ds.raster,maxpixels=100000,nlevels=10)
library(leafletR)
contour.Leaflet <- toGeoJSON(ds.contour)
colour.scale <- color.scale(1:(length(contour$level)-1),color.spec="rgb",extremes=c("red","blue"))
map.style <- styleGrad(pro="level",breaks=Contour$level,style.val=colour.scale,leg="Number of Crimes", lwd=2)
install.packages("plotrix")
library(plotrix)
colour.scale <- color.scale(1:(length(contour$level)-1),color.spec="rgb",extremes=c("red","blue"))
map.style <- styleGrad(pro="level",breaks=contour$level,style.val=colour.scale,leg="Number of Crimes", lwd=2)
leaflet(contour.Leaflet,style=map.style,base.map="tls")
detach("package:leafletR", unload = TRUE)
library(leafletR)
Rlogo <- file.path(R.home("doc"), "html", "logo.jpg")
m %>% addMarkers(
174.7690922, -36.8523071, icon = list(
iconUrl = Rlogo, iconSize = c(100, 76)
), popup = "R was born here!"
)
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(r),
na.color = "transparent")
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(ds.raster),
na.color = "transparent")
leaflet() %>% addTiles() %>%
addRasterImage(ds.raster, colors = pal, opacity = 0.8) %>%
addLegend(pal = pal, values = values(r),
title = "Surface temp")
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
projection(ds.raster)=projection(city)
r<-projectRaster(ds.raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(ds.raster),
na.color = "transparent")
leaflet() %>% addTiles() %>%
addRasterImage(ds.raster, colors = pal, opacity = 0.8) %>%
addLegend(pal = pal, values = values(r),
title = "Surface temp")
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(r),
na.color = "transparent")
leaflet() %>% addTiles() %>%
addRasterImage(r,
colors = pal,
opacity = 0.8) %>%
addLegend(pal = pal, values = values(r),
title = "Surface temp")
library(leaflet)
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(r),
na.color = "transparent")
leaflet() %>% addTiles() %>%
addRasterImage(r,
colors = pal,
opacity = 0.8) %>%
addLegend(pal = pal, values = values(r),
title = "Surface temp")
library(leaflet)
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(r),
na.color = "transparent")
leaflet() %>% addTiles() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
addRasterImage(r,
colors = pal,
opacity = 0.8) %>%
addLegend(pal = pal, values = values(r),title = "Crime Density") %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE)
)
library(leaflet)
data$popup <- paste("<b>Incident #: </b>", data$ID, "<br>", "<b>incident_type: </b>", data$incident_type,
"<br>", "<b>Date: </b>", data$date_incid,
"<br>", "<b>Day of week: </b>", data$day_of_week,
"<br>", "<b>Time: </b>", data$date_incid,
"<br>", "<b>Address: </b>", data$address,
"<br>", "<b>Longitude: </b>", data$long,
"<br>", "<b>Latitude: </b>", data$lat)
leaflet(data, width = "100%") %>% addTiles() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addMarkers(lng = ~long, lat = ~lat, popup = data$popup, clusterOptions = markerClusterOptions()) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE)
)
data <- df %>%
select(ID, long, lat, address, incident_type, date_incid, day_of_week, hour_of_day)
library(leaflet)
data$popup <- paste("<b>Incident #: </b>", data$ID, "<br>", "<b>incident_type: </b>", data$incident_type,
"<br>", "<b>Date: </b>", data$date_incid,
"<br>", "<b>Day of week: </b>", data$day_of_week,
"<br>", "<b>Time: </b>", data$date_incid,
"<br>", "<b>Address: </b>", data$address,
"<br>", "<b>Longitude: </b>", data$long,
"<br>", "<b>Latitude: </b>", data$lat)
leaflet(data, width = "100%") %>% addTiles() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addMarkers(lng = ~long, lat = ~lat, popup = data$popup, clusterOptions = markerClusterOptions()) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE)
)
library(leaflet)
data$popup <- paste("<b>Incident #: </b>", data$ID, "<br>", "<b>incident_type: </b>", data$incident_type,
"<br>", "<b>Date: </b>", data$date_incid,
"<br>", "<b>Day of week: </b>", data$day_of_week,
"<br>", "<b>Time: </b>", data$date_incid,
"<br>", "<b>Address: </b>", data$address,
"<br>", "<b>Longitude: </b>", data$long,
"<br>", "<b>Latitude: </b>", data$lat)
leaflet(data) %>% addTiles() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addMarkers(lng = ~long, lat = ~lat, popup = data$popup, clusterOptions = markerClusterOptions()) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE)
)
library(sp)           ## Data management
library(spdep)        ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(raster)       ## spatial data
library(grid)         # plot
library(gridExtra)    # Multiple plot
library(ggplot2)      # Multiple plot
library(gtable)
library(ggrepel)      # for better lebelling
library(tidyverse)    # data manupulation
library(ggplot2)
library(ggmap)        #use to read map
library(maps)         #map tools kits
library(spatstat)
library(maptools)
# Define data folder
dataFolder<-"D:\\Dropbox\\WebSite_Data\\R_Data\\Data_Crime\\"
df<-read.csv(paste0(dataFolder,"crime_data_2018.csv"), header = TRUE)
city<-shapefile(paste0(dataFolder,"buffalo_city.shp"))
crime_loc<-shapefile(paste0(dataFolder,"Crime_location_2018.shp"))
df$incident_type<-as.factor(df$incident_type)
levels(df$incident_type)
df_incident <- as.data.frame(sort(table(df$incident_type),decreasing = TRUE))
colnames(df_incident) <- c("Incident_Type", "Total")
df_incident
df_incident$Percentage <- df_incident$Total / sum(df_incident$Total)
df_incident
df_incident %>%
ggplot(aes(reorder(`Incident_Type`, Total), y = Total)) +
geom_col(fill = "orange") +
geom_label_repel(aes(label = Total), size = 2.5) +
coord_flip() +
labs(title = "Crime Committed in 2018 at City of Buffalo",
x = "",
y = "Total")+
theme(plot.title = element_text(hjust = 0.5))
city_gcs <- spTransform(city, CRS("+proj=longlat +datum=WGS84"))
city_gcs <- fortify(city_gcs)
cols=c("Theft" ="Green", "Assault"= "blue", "Breaking & Entering" = "sky blue", "Theft of Vehicle"= "orange", "Robbery" = "yellow4",
"Other Sexual Offense" = "yellow", "Sexual Assault" = "black" , "Homicide" = "red")
qmplot(long, lat, data = city_gcs, maptype = "toner-lite", color = I("grey"))+
geom_polygon(aes(x=long, y=lat, group=group),
fill='grey', size=.2,color='black', data=city_gcs, alpha=0)+
geom_point(aes(x = long,
y = lat,
size = I(1),
colour = incident_type
), data =df) +
coord_equal() +
scale_colour_manual(values = cols) +
ggtitle("Types of Crime Commited in 2018")+
theme(plot.title = element_text(hjust = 0.5))
crime_data=merge(crime_loc, df, by="ID")
cityOwin <- as.owin(city)
class(cityOwin)
pts <- coordinates(crime_data)
head(pts)
p <- ppp(pts[,1], pts[,2], window=cityOwin)
plot(p)
ds <- density(p,
sigma = 500) # Smoothing bandwidth, or bandwidth selection function
plot(ds, Add=TRUE, main='Crime density')
opt_bw <-bw.diggle(p)
opt_ds <-density(p, sigma=opt_bw) # Using optimal bandwidths
plot(opt_ds, Add=TRUE, main='Crime density')
ds <- density(p,
sigma = 500) # Smoothing bandwidth, or bandwidth selection function
plot(ds,  main='Crime density')
contour(ds, add=TRUE)
pal = colorNumeric(c("green", "yellow", "orange", "red"), values(r),
na.color = "transparent")
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
projection(ds.raster)=projection(city)
r<-projectRaster(ds.raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
pal = colorNumeric(c("green", "yellow", "orange", "red"), values(r),
na.color = "transparent")
data <- df %>%
select(ID, long, lat, address, incident_type, date_incid, day_of_week, hour_of_day)
library(leaflet)
data$popup <- paste("<b>Incident #: </b>", data$ID, "<br>", "<b>incident_type: </b>", data$incident_type,
"<br>", "<b>Date: </b>", data$date_incid,
"<br>", "<b>Day of week: </b>", data$day_of_week,
"<br>", "<b>Time: </b>", data$date_incid,
"<br>", "<b>Address: </b>", data$address,
"<br>", "<b>Longitude: </b>", data$long,
"<br>", "<b>Latitude: </b>", data$lat)
leaflet(data, width ="100%") %>% addTiles() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(provider = "Esri.WorldStreetMap",group = "World StreetMap") %>%
addProviderTiles(provider = "Esri.WorldImagery",group = "World Imagery") %>%
# addProviderTiles(provider = "NASAGIBS.ViirsEarthAtNight2012",group = "Nighttime Imagery") %>%
addMarkers(lng = ~long, lat = ~lat, popup = data$popup, clusterOptions = markerClusterOptions()) %>%
addLayersControl(
baseGroups = c("OSM (default)","World StreetMap", "World Imagery"),
options = layersControlOptions(collapsed = FALSE)
)
ds <- density(p, sigma = 500,edge=T) # Smoothing bandwidth, or bandwidth selection function
ds.raster <- raster(ds)
projection(ds.raster)=projection(city)
r<-projectRaster(ds.raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
pal = colorNumeric(c("green", "yellow", "orange", "red"), values(r),
na.color = "transparent")
leaflet() %>%
addTiles(group = "Map") %>%
addProviderTiles("Esri.WorldImagery", group = "Satellite") %>%
addRasterImage(r, group = "Raster",
colors = pal,
opacity = 0.6) %>%
addLegend(pal = pal,
values = values(r*100),
title = "Crime Densit x 100",
opacity = 1,
) %>%
addLayersControl(
baseGroups = c("Map", "Satellite"),
overlayGroups = c("Raster"),
options = layersControlOptions(collapsed = FALSE)
)
crime_data$fcat <- as.factor(crime_data$incident_type)
w <- as.owin(city)
xy <- coordinates(crime_data)
mpp <- ppp(xy[,1], xy[,2], window = w, marks=crime_data$fcat)
spp <- split(mpp)
plot(spp, main='')
#Nearest Neighbour Analysis
nnd <-nndist.ppp(p)
hist(nnd)
summary(nnd)
mnnd <-mean(nnd)
exp_nnd <-0.5/ sqrt(xhomicide$n / area.owin(Sbnd))
#Nearest Neighbour Analysis
nnd <-nndist.ppp(p)
hist(nnd)
summary(nnd)
mnnd <-mean(nnd)
exp_nnd <-0.5/ sqrt(p$n / area.owin(Sbnd))
#Nearest Neighbour Analysis
nnd <-nndist.ppp(p)
hist(nnd)
summary(nnd)
mnnd <-mean(nnd)
exp_nnd <-0.5/ sqrt(p$n / area.owin(city))
#Nearest Neighbour Analysis
nnd <-nndist.ppp(p)
hist(nnd)
summary(nnd)
mnnd <-mean(nnd)
exp_nnd <-0.5/ sqrt(p$n / area.owin(cityOwin))
mnnd / exp_nnd
# Define data folder
dataFolder<-"D:\\Dropbox\\WebSite_Data\\R_Data\\Data_Crime\\"
df<-read.csv(paste0(dataFolder,"crime_data_2018.csv"), header = TRUE)
knitr::include_graphics("E:\\GitHub\\geospatial-r-github\\Image\\empty_banner.png")
knitr::include_graphics("E:\\GitHub\\geospatial-r-github\\Image\\empty_banner.png")
knitr::include_graphics("E:\\GitHub\\geospatial-r-github\\Image\\empty_banner.png")
knitr::include_graphics("E:\\GitHub\\geospatial-r-github\\Image\\empty_banner.png")
dataFolder<-"D:\\Dropbox\\WebSite_Data\\R_Data\\Data_Crime\\"
# Define data folder
dataFolder<-"D:\\Dropbox\\WebSite_Data\\R_Data\\Data_Crime\\"
df<-read.csv(paste0(dataFolder,"crime_data_2018.csv"), header = TRUE)
city<-shapefile(paste0(dataFolder,"buffalo_city.shp"))
# Define data folder
dataFolder<-"F:\\Spatial_Data_Processing_and_Analysis_R\\Data\\DATA_08\\"
